version: "3"


volumes:
  user_postgres_data:
  user_redis_data:

services:
  postgresql:
    image: postgres:16.3-alpine3.20
    container_name: user_postgresql
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    environment:
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_DB=${POSTGRES_DB}"
    ports:
      - "${POSTGRES_PORT}:5432"

  redis:
    image: redis:7.4.0-alpine3.20
    container_name: user_redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - user_redis_data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "${ZOOKEEPER_PORT}:2181" # порт для клиентских соединений Zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # порт для клиентских соединений Zookeeper
      ZOOKEEPER_TICK_TIME: 2000 # основной интервал времени (в миллисекундах), используемый Zookeeper

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper # указывает, что Kafka зависит от сервиса Zookeeper и будет запущен после него
    ports:
      - "${KAFKA_PORT}:9092" # порт для клиентских соединений Kafka
    environment:
      KAFKA_BROKER_ID: 1 # уникальный идентификатор брокера Kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:${ZOOKEEPER_PORT}' # адрес подключения к Zookeeper
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # указывает протоколы безопасности для слушателей
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092 # указывает, какие адреса будут использоваться для общения с Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # фактор репликации топика смещений
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # время задержки перед началом перебалансировки группы
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1 # минимальное количество реплик, которые должны быть в синхронизации для топика состояния транзакции
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 # фактор репликации топика состояния транзакции

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - "${KAFKA_UI_PORT}:8080" # порт для клиентских соединений Kafka UI
    environment:
      DYNAMIC_CONFIG_ENABLED: true

  # migrator:
  #   build:
  #     context: .
  #     dockerfile: migration_container/Dockerfile
  #   restart: on-failure
  #   environment:
  #     DB_HOST: postgresql

  # chat:
  #   image: ${REGISTRY}/${IMAGE_NAME}:${TAG_NAME}
  #   container_name: chat
  #   environment:
  #     - "POSTGRES_USER=${POSTGRES_USER}"
  #     - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
  #     - "POSTGRES_HOST=${POSTGRES_HOST}"
  #     - "POSTGRES_PORT=${POSTGRES_PORT}"
  #     - "POSTGRES_DB=${POSTGRES_DB}"
  #     - "GRPC_PROTOCOL=${GRPC_PROTOCOL}"
  #     - "GRPC_HOST=${GRPC_HOST}"
  #     - "GRPC_PORT=${GRPC_PORT}"
  #   ports:
  #     - "${GRPC_PORT}:${GRPC_PORT}"
  #   depends_on:
  #     postgresql:
  #       condition: service_healthy
  #     migrator:
  #       condition: service_completed_successfully
  #   restart: on-failure
