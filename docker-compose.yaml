version: "3"


volumes:
  user_postgres_data:
  user_redis_data:

services:
  postgresql:
    image: postgres:16.3-alpine3.20
    container_name: user_postgresql
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    environment:
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_DB=${POSTGRES_DB}"
    ports:
      - "${POSTGRES_PORT}:5432"

  redis:
    image: redis:7.4.0-alpine3.20
    container_name: user_redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - user_redis_data:/data

  # migrator:
  #   build:
  #     context: .
  #     dockerfile: migration_container/Dockerfile
  #   restart: on-failure
  #   environment:
  #     DB_HOST: postgresql

  # chat:
  #   image: ${REGISTRY}/${IMAGE_NAME}:${TAG_NAME}
  #   container_name: chat
  #   environment:
  #     - "POSTGRES_USER=${POSTGRES_USER}"
  #     - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
  #     - "POSTGRES_HOST=${POSTGRES_HOST}"
  #     - "POSTGRES_PORT=${POSTGRES_PORT}"
  #     - "POSTGRES_DB=${POSTGRES_DB}"
  #     - "GRPC_PROTOCOL=${GRPC_PROTOCOL}"
  #     - "GRPC_HOST=${GRPC_HOST}"
  #     - "GRPC_PORT=${GRPC_PORT}"
  #   ports:
  #     - "${GRPC_PORT}:${GRPC_PORT}"
  #   depends_on:
  #     postgresql:
  #       condition: service_healthy
  #     migrator:
  #       condition: service_completed_successfully
  #   restart: on-failure
